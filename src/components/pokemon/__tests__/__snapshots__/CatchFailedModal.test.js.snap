// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`catch failed modal matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  z-index: 100;
  background-color: rgba(0, 0, 0, 0.5);
  width: 100%;
}

.emotion-1 {
  max-width: 48rem;
  background-color: white;
  border-top: 2rem solid #E53935;
  border-bottom: 2rem solid #303C42;
  width: 100%;
  border-radius: 0.5rem;
  margin-top: auto;
  margin-bottom: auto;
  margin-left: 2rem;
  margin-right: 2rem;
}

@media screen and (min-width: 1024px) {
  .emotion-1 {
    margin-left: auto;
    margin-right: auto;
  }
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: white;
  margin: -1rem 0;
  padding: 1rem;
  width: 100%;
  border-radius: 0.5rem;
}

.emotion-3 {
  object-fit: contain;
  object-position: center;
}

.emotion-4 {
  text-align: center;
}

.emotion-5 {
  border-radius: 0.375rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 1rem;
  cursor: pointer;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  color: white;
  background-color: #E53935;
  border: 1px solid transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-5:hover,
.emotion-5:focus {
  background-color: #cf3835;
}

<body>
    <div>
      <div
        class="emotion-0"
      >
        <div
          class="emotion-1"
        >
          <div
            class="emotion-2"
          >
            <picture>
              <source
                data-testid="image-webp"
                srcset="/assets/img/webp/surprised-pikachu-128.webp"
                type="image/webp"
              />
              <source
                data-testid="image-png"
                srcset="/assets/img/png/surprised-pikachu-128.png"
                type="image/png"
              />
              <img
                alt="Surprised Pikachu"
                class="emotion-3"
                data-testid="image-regular"
                height="76"
                loading="lazy"
                src="/assets/img/png/surprised-pikachu-128.png"
                width="76"
              />
            </picture>
            <h2
              class="emotion-4"
            >
              OH Noooo, Pokemon escaped ! ! !
            </h2>
            <button
              class="emotion-5"
            >
              Okay (ㄒoㄒ)
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  z-index: 100;
  background-color: rgba(0, 0, 0, 0.5);
  width: 100%;
}

.emotion-1 {
  max-width: 48rem;
  background-color: white;
  border-top: 2rem solid #E53935;
  border-bottom: 2rem solid #303C42;
  width: 100%;
  border-radius: 0.5rem;
  margin-top: auto;
  margin-bottom: auto;
  margin-left: 2rem;
  margin-right: 2rem;
}

@media screen and (min-width: 1024px) {
  .emotion-1 {
    margin-left: auto;
    margin-right: auto;
  }
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: white;
  margin: -1rem 0;
  padding: 1rem;
  width: 100%;
  border-radius: 0.5rem;
}

.emotion-3 {
  object-fit: contain;
  object-position: center;
}

.emotion-4 {
  text-align: center;
}

.emotion-5 {
  border-radius: 0.375rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 1rem;
  cursor: pointer;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  color: white;
  background-color: #E53935;
  border: 1px solid transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-5:hover,
.emotion-5:focus {
  background-color: #cf3835;
}

<div>
    <div
      class="emotion-0"
    >
      <div
        class="emotion-1"
      >
        <div
          class="emotion-2"
        >
          <picture>
            <source
              data-testid="image-webp"
              srcset="/assets/img/webp/surprised-pikachu-128.webp"
              type="image/webp"
            />
            <source
              data-testid="image-png"
              srcset="/assets/img/png/surprised-pikachu-128.png"
              type="image/png"
            />
            <img
              alt="Surprised Pikachu"
              class="emotion-3"
              data-testid="image-regular"
              height="76"
              loading="lazy"
              src="/assets/img/png/surprised-pikachu-128.png"
              width="76"
            />
          </picture>
          <h2
            class="emotion-4"
          >
            OH Noooo, Pokemon escaped ! ! !
          </h2>
          <button
            class="emotion-5"
          >
            Okay (ㄒoㄒ)
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
